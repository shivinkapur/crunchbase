features = read.csv("/Users/shivinkapur/Desktop/Crunchbase/crunchbase/features.csv")
features = features[c(2:4, 6:11,13,14)]
# Converts qualitative to quantitative
new_features = model.matrix(~., data=features)
library(caret)
library(kernlab)
# extract descriptors
new_features_2 = as.data.frame(new_features)
descr = new_features_2[c(1:288)]
# Check if predictors have zero variance
removeCol = nearZeroVar(descr)
new_descr = descr[-removeCol]
descr = new_descr
dim(descr)
amount = as.character(new_features_2$labelNum)
amount = as.factor(amount)
set.seed(1)
inTrain <- createDataPartition(amount, p = 3/4, list = FALSE)
trainDescr <- descr[inTrain,]
testDescr  <- descr[-inTrain,]
trainClass <- amount[inTrain]
testClass  <- amount[-inTrain]
prop.table(table(amount))
prop.table(table(trainClass))
# Transform predictors since different type of predictor variables may be needed by models
xTrans <- preProcess(trainDescr)
trainDescr <- predict(xTrans, trainDescr)
testDescr  <- predict(xTrans,  testDescr)
set.seed(2)
library(nnet)
bootControl <- trainControl(number = 200)
nnetFit <- train(trainDescr, trainClass, method = "nnet", tuneLength = 5,
trControl = bootControl, scaled = FALSE)
